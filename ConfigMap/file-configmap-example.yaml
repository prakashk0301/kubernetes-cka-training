# File-based ConfigMap Example - Configuration Files
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
  labels:
    app: nginx-server
    component: configuration
data:
  # Main nginx configuration
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss;

        # Include additional configs
        include /etc/nginx/conf.d/*.conf;
    }

  # Default server configuration
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Main application
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # API proxy
        location /api/ {
            proxy_pass http://backend-service:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
    }

  # Custom index page
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>ConfigMap Demo</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
            .container { max-width: 800px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
            h1 { color: #333; border-bottom: 2px solid #007acc; padding-bottom: 10px; }
            .info { background: #e7f3ff; padding: 15px; border-radius: 4px; margin: 20px 0; }
            code { background: #f0f0f0; padding: 2px 4px; border-radius: 2px; }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>ðŸš€ ConfigMap File Example</h1>
            <div class="info">
                <p><strong>Welcome!</strong> This page is served by Nginx using configuration loaded from a Kubernetes ConfigMap.</p>
                <p>Configuration includes:</p>
                <ul>
                    <li><code>nginx.conf</code> - Main Nginx configuration</li>
                    <li><code>default.conf</code> - Server block configuration</li>
                    <li><code>index.html</code> - This page content</li>
                </ul>
            </div>
            <h2>Configuration Details</h2>
            <ul>
                <li>Gzip compression enabled</li>
                <li>Static asset caching (1 year)</li>
                <li>API proxy to backend service</li>
                <li>Security headers configured</li>
                <li>Health check endpoint at <code>/health</code></li>
            </ul>
            <p><a href="/health">Test Health Check</a></p>
        </div>
    </body>
    </html>

---
# Deployment using file-based ConfigMap
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-file-config
  labels:
    app: nginx-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-server
  template:
    metadata:
      labels:
        app: nginx-server
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        # Mount nginx.conf to replace default configuration
        - name: nginx-main-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        # Mount server configuration
        - name: nginx-server-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
        # Mount custom index page
        - name: nginx-content
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
      volumes:
      - name: nginx-main-config
        configMap:
          name: nginx-config
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: nginx-server-config
        configMap:
          name: nginx-config
          items:
          - key: default.conf
            path: default.conf
      - name: nginx-content
        configMap:
          name: nginx-config
          items:
          - key: index.html
            path: index.html

---
# Service for the nginx deployment
apiVersion: v1
kind: Service
metadata:
  name: nginx-file-service
  labels:
    app: nginx-server
spec:
  selector:
    app: nginx-server
  ports:
  - port: 80
    targetPort: 80
    name: http
  type: ClusterIP

---
# Backend service for API proxy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-service
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: hashicorp/http-echo:0.2.3
        args:
        - "-text=Hello from backend API!"
        - "-listen=:8080"
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
  - port: 8080
    targetPort: 8080
